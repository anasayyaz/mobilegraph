[{"C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\index.js":"1","C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\App.js":"2","C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\Navbar.js":"3","C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\Create.js":"4","C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\Home.js":"5","C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\BlogList.js":"6","C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\useFetch.js":"7","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\index.js":"8","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\App.js":"9","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\Home.js":"10","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\Create.js":"11","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\BlogList.js":"12","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\useFetch.js":"13","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\Navbar.js":"14","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\TempGraph.js":"15","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\canvasjs.react.js":"16","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\canvasjs.min.js":"17","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\Canvas.js":"18","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\QRSGraph.js":"19","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\QTGraph.js":"20","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\SPO2Graph.js":"21","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\QTCGraph.js":"22","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\PIGraph.js":"23","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\PRGraph.js":"24","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\HRGraph.js":"25","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\BloodPressureGraph.js":"26"},{"size":432,"mtime":1662542179699,"results":"27","hashOfConfig":"28"},{"size":556,"mtime":1662542179610,"results":"29","hashOfConfig":"28"},{"size":412,"mtime":1662542179675,"results":"30","hashOfConfig":"28"},{"size":127,"mtime":1662542330247,"results":"31","hashOfConfig":"28"},{"size":236,"mtime":1662542322518,"results":"32","hashOfConfig":"28"},{"size":305,"mtime":1662542179622,"results":"33","hashOfConfig":"28"},{"size":807,"mtime":1662542179716,"results":"34","hashOfConfig":"28"},{"size":432,"mtime":1662542179699,"results":"35","hashOfConfig":"36"},{"size":605,"mtime":1662552401239,"results":"37","hashOfConfig":"36"},{"size":236,"mtime":1662542322518,"results":"38","hashOfConfig":"36"},{"size":3573,"mtime":1662576013628,"results":"39","hashOfConfig":"36"},{"size":126,"mtime":1662543485997,"results":"40","hashOfConfig":"36"},{"size":807,"mtime":1662542179716,"results":"41","hashOfConfig":"36"},{"size":412,"mtime":1662543488692,"results":"42","hashOfConfig":"36"},{"size":2201,"mtime":1662575977439,"results":"43","hashOfConfig":"36"},{"size":1673,"mtime":1641468332000,"results":"44","hashOfConfig":"36"},{"size":459238,"mtime":1641468332000,"results":"45","hashOfConfig":"36"},{"size":3631,"mtime":1662552518807,"results":"46","hashOfConfig":"36"},{"size":2226,"mtime":1662550770273,"results":"47","hashOfConfig":"36"},{"size":2310,"mtime":1662550770273,"results":"48","hashOfConfig":"36"},{"size":2268,"mtime":1662550770273,"results":"49","hashOfConfig":"36"},{"size":2283,"mtime":1662550770273,"results":"50","hashOfConfig":"36"},{"size":2278,"mtime":1662550770276,"results":"51","hashOfConfig":"36"},{"size":2262,"mtime":1662550770273,"results":"52","hashOfConfig":"36"},{"size":2262,"mtime":1662550770278,"results":"53","hashOfConfig":"36"},{"size":3362,"mtime":1662550770273,"results":"54","hashOfConfig":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"owu5x6",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"q5moxs",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"71"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"71"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"71"},"C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\index.js",[],"C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\App.js",[],"C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\Navbar.js",[],"C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\Create.js",[],"C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\Home.js",["119","120","121","122"],"C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\BlogList.js",[],"C:\\Users\\user\\Downloads\\Complete-React-Tutorial-lesson-23\\Complete-React-Tutorial-lesson-23\\dojo-blog\\src\\useFetch.js",[],"C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\index.js",[],["123","124"],"C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\App.js",["125"],"import Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n       \n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create/:height/:width/:type/:vid/:pid/:token\" render={(props) => <Create {...props}/>}/>\n              \n          \n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\Home.js",["126","127","128","129"],"import { useEffect, useState } from \"react\";\nimport BlogList from \"./BlogList\";\nimport useFetch from \"./useFetch\";\n\nconst Home = () => {\n \n\n  return (\n    <div className=\"home\">\n     <p>home</p>\n    </div>\n  );\n}\n \nexport default Home;\n","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\Create.js",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\BlogList.js",[],"C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\useFetch.js",[],"C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\Navbar.js",[],"C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\TempGraph.js",["145","146","147","148","149"],"C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\canvasjs.react.js",[],"C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\canvasjs.min.js",[],"C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\Canvas.js",["150","151","152","153","154","155","156","157","158","159","160","161"],"import React, { useRef, useEffect, useState } from \"react\";\n\nlet status;\n\nconst Canvas = (props) => {\n  const canvasRef = useRef(null);\n  \nlet x,y;\n  const [errorText, setErrorText] = useState();\n  const [data, setData] = useState([]);\n\n\n  \n  const getECGValueApi = async () => {\n    try {\n      const response = await fetch(\n        `https://cloudclinicapi.azurewebsites.net/api/vitalsign/getPatientVitalSignbyVisit/${props.vid}`,\n        {\n          method: \"GET\",\n          body: null,\n          headers: {\n            Authorization: `Bearer ${props.token}`,\n          },\n        }\n      ).then((response) => {\n        response.json().then((data) => {\n            if (data == \"Sorry, no luck, No Data Found in our system!\") {\n              setErrorText(\"No ECG Data Found in our system!\");\n              // alert(\"no data\")\n            } else {\n              // alert(\"getting\")\n              if(data.ecg==null)\n              {\n                // alert(\"empty\")\n                status=0;\n                \n              }\n              else\n              {\n                status=1;\n                setData(data.ecg && data.ecg.split(\",\"));\n              }\n            \n            }\n        });\n      });\n    } catch (err) {\n      // alert(err);\n    }\n  };\n\n  useEffect(() => {\n    // alert(window.innerHeight+\"   \"+window.innerWidth)\n    getECGValueApi();\n  }, []);\n\n  useEffect(() => {\n    // console.log(data);\n    // alert(\"status\"+status)\nif(status==1)\n     {const canvas = canvasRef.current;\n      var ctx = canvas.getContext(\"2d\"),\n      w = props.w,\n      h = props.h,\n      px = 0,\n      opx = 0,\n      speed = 1,\n      py = h * 0.8,\n      opy = py,\n      scanBarWidth = 20;\n      //  ctx.transform(1, 0, 0, -1, 0, canvas.height);\n      ctx.strokeStyle = \"#202020\";\n           ctx.lineWidth = 1;\n        \n \n  // for (x=0;x<=w;x+=40) {\n  //       for (y=0;y<=h;y+=40) {\n  //           ctx.moveTo(x, 0);\n  //           ctx.lineTo(x, h);\n  //           ctx.stroke();\n  //           ctx.moveTo(0, y);\n  //           ctx.lineTo(w, y);\n  //           ctx.stroke();\n  //       }\n  //   }\n\n\n    var i = 0;\n    function PYval() {\n      py = -data[i] /10+200;\n      i=i+4;\n      if (i == data.length - 1) i = 0;\n    }\n    loop();\n\n\n    function loop() {\n    \n  \n\n    ctx.strokeStyle = \"#00bd00\";\n    ctx.lineWidth = 4;\n      PYval();\n      px=px+2;\n      ctx.beginPath();\n      ctx.moveTo(opx, opy);\n      ctx.lineTo(px, py);\n      ctx.stroke();\n      \n      \n\n      opx = px;\n      opy = py;\n      if (opx == w+80) {\n        px = opx = 0;\n   \n        ctx.strokeStyle = \"#202020\";\n  ctx.lineWidth = 1;\n// for (x=0;x<=w;x+=40) {\n         ctx.clearRect(0, 0, w, h);\n      \n  //       for (y=0;y<=h;y+=40) {\n  //           ctx.moveTo(x, 0);\n  //           ctx.lineTo(x, h);\n  //           ctx.stroke();\n  //           ctx.moveTo(0, y);\n  //           ctx.lineTo(w, y);\n  //           ctx.stroke();\n  //       }\n  //   }\n     \n      }\n\n      requestAnimationFrame(loop);\n     \n\n    }}\n  }, [data]);\n\n  return (\n    <React.Fragment>\n      {status ? (\n      <canvas\n        ref={canvasRef}\n        width={window.innerWidth}\n        height={window.innerHeight}\n        style={{\n          backgroundColor: \"black\",\n        }}\n      />\n        ) : \n        <div style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100%\",\n          widht: \"100%\",\n         \n        \n        }}>\n   <h2 style={{ backgroundColor: \"#000000\",color:\"#00bd00\",padding: \"10px\"}}>No ECG data found</h2>\n        </div>\n        \n        }\n\n\n    </React.Fragment>\n  );\n};\n\nexport default Canvas;\n","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\QRSGraph.js",["162","163","164","165","166","167"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CanvasJSReact from \"./canvasjs.react\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst QRSGraph = (props) => {\n  let graphData = [];\n\n  const [options, setOptions] = useState();\n  const token = useSelector((state) => state.userReducer.token);\n  const user_id = useSelector((state) => state.userReducer.users);\n  const [errorText, setErrorText] = useState();\n  const [data, setData] = useState([]);\n  const [visitDate, setVisitDate] = useState([]);\n\n  const getQRSValueApi = async () => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}VitalSign/getPatienttemp/${props.patient_id}`,\n        {\n          method: \"GET\",\n          body: null,\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      ).then((response) => {\n        response.json().then((data) => {\n          if (data) {\n            setVisitDate(data?.vitalsignGraph?.datetime.split(\",\"));\n            setData(data?.vitalsignGraph?.qrs.split(\",\"));\n          }\n        });\n      });\n    } catch (err) {\n      console.log(err);\n      setErrorText(err);\n    }\n  };\n\n  useEffect(() => {\n    getQRSValueApi();\n  }, []);\n\n  useEffect(() => {\n \n\n    for (let i = 0; i < data.length; i++) {\n      graphData.push({ label: `${visitDate[i]}`, y: parseFloat(data[i]) });\n    }\n\n    setOptions({\n       width:400,//in pixels\n      height:350,//in pixels\n       legend: {\n     horizontalAlign: \"center\", // left, center ,right \n     verticalAlign: \"top\",  // top, center, bottom\n   },\n      dataPointMaxWidth: 20,\n      axisX:{\n        // title: \"Visit Date\",\n            labelAngle: 0,\n        labelWrap :true,\n        labelAutoFit:true,\n       },\n       axisY:{\n        title: \"milliseconds\",\n       },\n      data: [\n             {\n          type: \"column\",\n          color:\"#36a9f7\",\n          dataPoints: graphData,\n        },\n      ],\n    });\n\n  }, [data, visitDate]);\n\n  return (\n    <div className=\"w-100\">\n      {options && (\n        <CanvasJSChart\n          options={options}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default QRSGraph;\n","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\QTGraph.js",["168","169","170","171","172","173"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CanvasJSReact from \"./canvasjs.react\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst QTGraph = (props) => {\n  let graphData = [];\n\n  const [options, setOptions] = useState();\n  const token = useSelector((state) => state.userReducer.token);\n  const user_id = useSelector((state) => state.userReducer.users);\n  const [errorText, setErrorText] = useState();\n  const [data, setData] = useState([]);\n  const [visitDate, setVisitDate] = useState([]);\n\n  const getQTValueApi = async () => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}VitalSign/getPatienttemp/${props.patient_id}`,\n        {\n          method: \"GET\",\n          body: null,\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      ).then((response) => {\n        response.json().then((data) => {\n          if (data) {\n            setVisitDate(data?.vitalsignGraph?.datetime.split(\",\"));\n            setData(data?.vitalsignGraph?.qt.split(\",\"));\n          }\n        });\n      });\n    } catch (err) {\n      console.log(err);\n      setErrorText(err);\n    }\n  };\n\n  useEffect(() => {\n    getQTValueApi();\n  }, []);\n\n  useEffect(() => {\n    console.log(data);\n    console.log(visitDate);\n\n    for (let i = 0; i < data.length; i++) {\n      graphData.push({ label: `${visitDate[i]}`, y: parseFloat(data[i]) });\n    }\n\n    setOptions({\n       width:400,//in pixels\n      height:350,//in pixels\n       legend: {\n     horizontalAlign: \"center\", // left, center ,right \n     verticalAlign: \"top\",  // top, center, bottom\n   },\n      dataPointMaxWidth: 20,\n      axisX:{\n        // title: \"Visit Date\",\n            labelAngle: 0,\n        labelWrap :true,\n        labelAutoFit:true,\n       },\n       axisY:{\n        title: \"milliseconds\",\n       },\n      data: [\n             {\n          type: \"column\",\n          color:\"#36a9f7\",\n          dataPoints: graphData,\n        },\n      ],\n    });\nalert(graphData)\nconsole.log(graphData);\n  }, [data, visitDate]);\n\n  return (\n    <div className=\"w-100\">\n      {options && (\n        <CanvasJSChart\n          options={options}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default QTGraph;\n","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\SPO2Graph.js",["174","175","176","177","178","179"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CanvasJSReact from \"./canvasjs.react\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst SPO2Graph = (props) => {\n  let graphData = [];\n\n  const [options, setOptions] = useState();\n  const token = useSelector((state) => state.userReducer.token);\n  const user_id = useSelector((state) => state.userReducer.users);\n  const [errorText, setErrorText] = useState();\n  const [data, setData] = useState([]);\n  const [visitDate, setVisitDate] = useState([]);\n\n  const getPRValueApi = async () => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}VitalSign/getPatienttemp/${props.patient_id}`,\n        {\n          method: \"GET\",\n          body: null,\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      ).then((response) => {\n        response.json().then((data) => {\n          if (data) {\n            setVisitDate(data?.vitalsignGraph?.datetime.split(\",\"));\n            setData(data?.vitalsignGraph?.spO2.split(\",\"));\n          }\n        });\n      });\n    } catch (err) {\n      console.log(err);\n      setErrorText(err);\n    }\n  };\n\n  useEffect(() => {\n    getPRValueApi();\n  }, []);\n\n  useEffect(() => {\n    console.log(data);\n    console.log(visitDate);\n\n    for (let i = 0; i < data.length; i++) {\n      graphData.push({ label: `${visitDate[i]}`, y: parseFloat(data[i]) });\n    }\n\n    setOptions({\n       width:400,//in pixels\n      height:350,//in pixels\n       legend: {\n     horizontalAlign: \"center\", // left, center ,right \n     verticalAlign: \"top\",  // top, center, bottom\n   },\n      dataPointMaxWidth: 20,\n      axisX:{\n        // title: \"Visit Date\",\n            labelAngle: 0,\n        labelWrap :true,\n        labelAutoFit:true,\n       },\n       axisY:{\n        title: \"/Min\",\n       },\n      data: [\n             {\n          type: \"column\",\n          color:\"#36a9f7\",\n          dataPoints: graphData,\n        },\n      ],\n    });\n\n  }, [data, visitDate]);\n\n  return (\n    <div className=\"w-100\">\n      {options && (\n        <CanvasJSChart\n          options={options}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SPO2Graph;\n","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\QTCGraph.js",["180","181","182","183","184","185"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CanvasJSReact from \"./canvasjs.react\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst QTCGraph = (props) => {\n  let graphData = [];\n\n  const [options, setOptions] = useState();\n  const token = useSelector((state) => state.userReducer.token);\n  const user_id = useSelector((state) => state.userReducer.users);\n  const [errorText, setErrorText] = useState();\n  const [data, setData] = useState([]);\n  const [visitDate, setVisitDate] = useState([]);\n\n  const getQTCValueApi = async () => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}VitalSign/getPatienttemp/${props.patient_id}`,\n        {\n          method: \"GET\",\n          body: null,\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      ).then((response) => {\n        response.json().then((data) => {\n          if (data) {\n            setVisitDate(data?.vitalsignGraph?.datetime.split(\",\"));\n            setData(data?.vitalsignGraph?.qtc.split(\",\"));\n          }\n        });\n      });\n    } catch (err) {\n      console.log(err);\n      setErrorText(err);\n    }\n  };\n\n  useEffect(() => {\n    getQTCValueApi();\n  }, []);\n\n  useEffect(() => {\n    console.log(data);\n    console.log(visitDate);\n\n    for (let i = 0; i < data.length; i++) {\n      graphData.push({ label: `${visitDate[i]}`, y: parseFloat(data[i]) });\n    }\n\n    setOptions({\n       width:400,//in pixels\n      height:350,//in pixels\n       legend: {\n     horizontalAlign: \"center\", // left, center ,right \n     verticalAlign: \"top\",  // top, center, bottom\n   },\n      dataPointMaxWidth: 20,\n      axisX:{\n        // title: \"Visit Date\",\n            labelAngle: 0,\n        labelWrap :true,\n        labelAutoFit:true,\n       },\n       axisY:{\n        title: \"milliseconds\"\n        \n       },\n      data: [\n             {\n          type: \"column\",\n          color:\"#36a9f7\",\n          dataPoints: graphData,\n        },\n      ],\n    });\n\n  }, [data, visitDate]);\n\n  return (\n    <div className=\"w-100\">\n      {options && (\n        <CanvasJSChart\n          options={options}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default QTCGraph;\n","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\PIGraph.js",["186","187","188","189","190","191"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CanvasJSReact from \"./canvasjs.react\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst PIGraph = (props) => {\n  let graphData = [];\n\n  const [options, setOptions] = useState();\n  const token = useSelector((state) => state.userReducer.token);\n  const user_id = useSelector((state) => state.userReducer.users);\n  const [errorText, setErrorText] = useState();\n  const [data, setData] = useState([]);\n  const [visitDate, setVisitDate] = useState([]);\n\n  const getPIValueApi = async () => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}VitalSign/getPatienttemp/${props.patient_id}`,\n        {\n          method: \"GET\",\n          body: null,\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      ).then((response) => {\n        response.json().then((data) => {\n          if (data) {\n            setVisitDate(data?.vitalsignGraph?.datetime.split(\",\"));\n            setData(data?.vitalsignGraph?.pi.split(\",\"));\n          }\n        });\n      });\n    } catch (err) {\n      console.log(err);\n      setErrorText(err);\n    }\n  };\n\n  useEffect(() => {\n    getPIValueApi();\n  }, []);\n\n  useEffect(() => {\n    console.log(data);\n    console.log(visitDate);\n\n    for (let i = 0; i < data.length; i++) {\n      graphData.push({ label: `${visitDate[i]}`, y: parseFloat(data[i]) });\n    }\n\n    setOptions({\n       width:400,//in pixels\n      height:350,//in pixels\n       legend: {\n     horizontalAlign: \"center\", // left, center ,right \n     verticalAlign: \"top\",  // top, center, bottom\n   },\n      dataPointMaxWidth: 20,\n      axisX:{\n        // title: \"Visit Date\",\n            labelAngle: 0,\n        labelWrap :true,\n        labelAutoFit:true,\n       },\n       axisY:{\n        title: \"Index\",\n   \n       },\n      data: [\n             {\n          type: \"column\",\n          color:\"#36a9f7\",\n          \n          dataPoints: graphData,\n        },\n      ],\n    });\n\n  }, [data, visitDate]);\n\n  return (\n    <div className=\"w-100\">\n      {options && (\n        <CanvasJSChart\n          options={options}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PIGraph;\n","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\PRGraph.js",["192","193","194","195","196","197"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CanvasJSReact from \"./canvasjs.react\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst PRGraph = (props) => {\n  let graphData = [];\n\n  const [options, setOptions] = useState();\n  const token = useSelector((state) => state.userReducer.token);\n  const user_id = useSelector((state) => state.userReducer.users);\n  const [errorText, setErrorText] = useState();\n  const [data, setData] = useState([]);\n  const [visitDate, setVisitDate] = useState([]);\n\n  const getPRValueApi = async () => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}VitalSign/getPatienttemp/${props.patient_id}`,\n        {\n          method: \"GET\",\n          body: null,\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      ).then((response) => {\n        response.json().then((data) => {\n          if (data) {\n            setVisitDate(data?.vitalsignGraph?.datetime.split(\",\"));\n            setData(data?.vitalsignGraph?.pr.split(\",\"));\n          }\n        });\n      });\n    } catch (err) {\n      console.log(err);\n      setErrorText(err);\n    }\n  };\n\n  useEffect(() => {\n    getPRValueApi();\n  }, []);\n\n  useEffect(() => {\n    console.log(data);\n    console.log(visitDate);\n\n    for (let i = 0; i < data.length; i++) {\n      graphData.push({ label: `${visitDate[i]}`, y: parseFloat(data[i]) });\n    }\n\n    setOptions({\n       width:400,//in pixels\n      height:350,//in pixels\n       legend: {\n     horizontalAlign: \"center\", // left, center ,right \n     verticalAlign: \"top\",  // top, center, bottom\n   },\n      dataPointMaxWidth: 20,\n      axisX:{\n        // title: \"Visit Date\",\n            labelAngle: 0,\n        labelWrap :true,\n        labelAutoFit:true,\n       },\n       axisY:{\n        title: \"/Min\",\n       },\n      data: [\n             {\n          type: \"column\",\n          color:\"#36a9f7\",\n          dataPoints: graphData,\n        },\n      ],\n    });\n\n  }, [data, visitDate]);\n\n  return (\n    <div className=\"w-100\">\n      {options && (\n        <CanvasJSChart\n          options={options}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PRGraph;\n","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\HRGraph.js",["198","199","200","201","202","203"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CanvasJSReact from \"./canvasjs.react\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst HRGraph = (props) => {\n  let graphData = [];\n\n  const [options, setOptions] = useState();\n  const token = useSelector((state) => state.userReducer.token);\n  const user_id = useSelector((state) => state.userReducer.users);\n  const [errorText, setErrorText] = useState();\n  const [data, setData] = useState([]);\n  const [visitDate, setVisitDate] = useState([]);\n\n  const getHRValueApi = async () => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}VitalSign/getPatienttemp/${props.patient_id}`,\n        {\n          method: \"GET\",\n          body: null,\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      ).then((response) => {\n        response.json().then((data) => {\n          if (data) {\n            setVisitDate(data?.vitalsignGraph?.datetime.split(\",\"));\n            setData(data?.vitalsignGraph?.hr.split(\",\"));\n          }\n        });\n      });\n    } catch (err) {\n      console.log(err);\n      setErrorText(err);\n    }\n  };\n\n  useEffect(() => {\n    getHRValueApi();\n  }, []);\n\n  useEffect(() => {\n    console.log(data);\n    console.log(visitDate);\n\n    for (let i = 0; i < data.length; i++) {\n      graphData.push({ label: `${visitDate[i]}`, y: parseFloat(data[i]) });\n    }\n\n    setOptions({\n       width:400,//in pixels\n      height:350,//in pixels\n       legend: {\n     horizontalAlign: \"center\", // left, center ,right \n     verticalAlign: \"top\",  // top, center, bottom\n   },\n      dataPointMaxWidth: 20,\n      axisX:{\n        // title: \"Visit Date\",\n            labelAngle: 0,\n        labelWrap :true,\n        labelAutoFit:true,\n       },\n       axisY:{\n        title: \"/min\",\n       },\n      data: [\n             {\n          type: \"column\",\n          color:\"#36a9f7\",\n          dataPoints: graphData,\n        },\n      ],\n    });\n\n  }, [data, visitDate]);\n\n  return (\n    <div className=\"w-100\">\n      {options && (\n        <CanvasJSChart\n          options={options}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default HRGraph;\n","C:\\Users\\user\\Documents\\Cloud Clinic\\Web\\ReactNativeGraph\\dojo-blog\\src\\BloodPressureGraph.js",["204","205","206","207","208","209","210"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CanvasJSReact from \"./canvasjs.react\";\n//var CanvasJSReact = require('./canvasjs.react');\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst BloodPressureGraph = (props) => {\n  let sys_data = [];\n  let dia_data = [];\nlet h,w;\n  const [options, setOptions] = useState();\n  const token = useSelector((state) => state.userReducer.token);\n  const user_id = useSelector((state) => state.userReducer.users);\n  const [errorText, setErrorText] = useState();\n  const [sysData, setSysData] = useState([]);\n  const [diaData, setDiaData] = useState([]);\n  const [visitDate, setVisitDate] = useState([]);\n\n  const getBloodPressureApi = async () => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}VitalSign/getPatienttemp/${props.patient_id}`,\n        {\n          method: \"GET\",\n          body: null,\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      ).then((response) => {\n        response.json().then((data) => {\n          if (data) {\n            setDiaData(data?.vitalsignGraph?.dia.split(\",\"));\n            setSysData(data?.vitalsignGraph?.sys.split(\",\"));\n            setVisitDate(data?.vitalsignGraph?.datetime.split(\",\")); \n          }\n        });\n      });\n    } catch (err) {\n      console.log(err);\n      setErrorText(err);\n    }\n  };\n\n  useEffect(() => {\n \n     h=300;\n    if(window.innerWidth>=2133 && window.innerHeight>=1076)\n    {\n      w=420;\n        h=350;\n    }\n    else if(window.innerWidth>=1920 && window.innerHeight>=969)\n    {\n      w=400;\n    }\n     else if(window.innerWidth>=1745 && window.innerHeight>=881)\n    {\n      w=350;\n    }\n     else if(window.innerWidth>=1536 && window.innerHeight>=775)\n    {\n      w=300;\n    }\n       else if( window.innerWidth>1000 && window.innerWidth<=1500)\n    {\n      w=380;\n    }\n      else if( window.innerWidth<=1000)\n    {\n      w=500;\n    }\n\n    getBloodPressureApi();\n  }, []);\n\n  useEffect(() => {\n\n    for (let i = 0; i < diaData.length; i++) {\n      dia_data.push({ label: `${visitDate[i]}`, y: parseFloat(diaData[i]) });\n      console.log(\"dia\"+visitDate[i]);\n      \n    }\n\n    for (let i = 0; i < diaData.length; i++) {\n      sys_data.push({ label: `${visitDate[i]}`, y: parseFloat(sysData[i]) });\n       console.log(\"sys\"+visitDate[i]);\n    }\n\n    setOptions({\n       width:w,//in pixels\n       height:h,//in pixels\n       legend: {\n     horizontalAlign: \"center\", // left, center ,right \n     verticalAlign: \"top\",  // top, center, bottom\n   },\n      dataPointMaxWidth: 20,\n      axisX:{\n        labelAngle: 0,\n        labelWrap :true,\n        labelAutoFit:true,\n       },\n     \n       axisY:{\n        title: \"mmHg\",\n    \n       },\n      data: [\n        {\n          showInLegend: true, \n          name: \"sys\",\n          type: \"column\",\n          dataPoints: sys_data,\n        },\n        {\n          showInLegend: true, \n          name: \"dia\",\n          type: \"column\",\n          dataPoints: dia_data,\n        },\n      ],\n    });\n  }, [sysData, diaData, visitDate]);\n\n  return (\n    <div className={\"my-modal-custom-class\"}>\n      {options && (\n        <CanvasJSChart\n          options={options}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default BloodPressureGraph;\n",{"ruleId":"211","severity":1,"message":"212","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":19},{"ruleId":"211","severity":1,"message":"215","line":1,"column":21,"nodeType":"213","messageId":"214","endLine":1,"endColumn":29},{"ruleId":"211","severity":1,"message":"216","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"217","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":16},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"211","severity":1,"message":"222","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":19},{"ruleId":"211","severity":1,"message":"215","line":1,"column":21,"nodeType":"213","messageId":"214","endLine":1,"endColumn":29},{"ruleId":"211","severity":1,"message":"216","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"217","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":16},{"ruleId":"211","severity":1,"message":"215","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"223","line":10,"column":8,"nodeType":"213","messageId":"214","endLine":10,"endColumn":15},{"ruleId":"224","severity":1,"message":"225","line":29,"column":32,"nodeType":"226","messageId":"227","endLine":29,"endColumn":34},{"ruleId":"224","severity":1,"message":"225","line":31,"column":37,"nodeType":"226","messageId":"227","endLine":31,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":33,"column":37,"nodeType":"226","messageId":"227","endLine":33,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":35,"column":37,"nodeType":"226","messageId":"227","endLine":35,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":37,"column":37,"nodeType":"226","messageId":"227","endLine":37,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":39,"column":37,"nodeType":"226","messageId":"227","endLine":39,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":41,"column":37,"nodeType":"226","messageId":"227","endLine":41,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":43,"column":37,"nodeType":"226","messageId":"227","endLine":43,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":45,"column":37,"nodeType":"226","messageId":"227","endLine":45,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":47,"column":37,"nodeType":"226","messageId":"227","endLine":47,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":49,"column":37,"nodeType":"226","messageId":"227","endLine":49,"endColumn":39},{"ruleId":"211","severity":1,"message":"228","line":53,"column":3,"nodeType":"213","messageId":"214","endLine":53,"endColumn":7},{"ruleId":"229","severity":1,"message":"230","line":60,"column":4,"nodeType":"231","endLine":60,"endColumn":6,"suggestions":"232"},{"ruleId":"211","severity":1,"message":"233","line":3,"column":5,"nodeType":"213","messageId":"214","endLine":3,"endColumn":13},{"ruleId":"211","severity":1,"message":"234","line":10,"column":10,"nodeType":"213","messageId":"214","endLine":10,"endColumn":19},{"ruleId":"211","severity":1,"message":"235","line":16,"column":13,"nodeType":"213","messageId":"214","endLine":16,"endColumn":21},{"ruleId":"229","severity":1,"message":"236","line":41,"column":6,"nodeType":"231","endLine":41,"endColumn":8,"suggestions":"237"},{"ruleId":"229","severity":1,"message":"238","line":81,"column":6,"nodeType":"231","endLine":81,"endColumn":23,"suggestions":"239"},{"ruleId":"211","severity":1,"message":"240","line":8,"column":5,"nodeType":"213","messageId":"214","endLine":8,"endColumn":6},{"ruleId":"211","severity":1,"message":"241","line":8,"column":7,"nodeType":"213","messageId":"214","endLine":8,"endColumn":8},{"ruleId":"211","severity":1,"message":"234","line":9,"column":10,"nodeType":"213","messageId":"214","endLine":9,"endColumn":19},{"ruleId":"211","severity":1,"message":"235","line":16,"column":13,"nodeType":"213","messageId":"214","endLine":16,"endColumn":21},{"ruleId":"224","severity":1,"message":"225","line":27,"column":22,"nodeType":"226","messageId":"227","endLine":27,"endColumn":24},{"ruleId":"229","severity":1,"message":"242","line":55,"column":6,"nodeType":"231","endLine":55,"endColumn":8,"suggestions":"243"},{"ruleId":"224","severity":1,"message":"225","line":60,"column":10,"nodeType":"226","messageId":"227","endLine":60,"endColumn":12},{"ruleId":"211","severity":1,"message":"244","line":67,"column":7,"nodeType":"213","messageId":"214","endLine":67,"endColumn":12},{"ruleId":"211","severity":1,"message":"245","line":70,"column":7,"nodeType":"213","messageId":"214","endLine":70,"endColumn":19},{"ruleId":"224","severity":1,"message":"225","line":92,"column":13,"nodeType":"226","messageId":"227","endLine":92,"endColumn":15},{"ruleId":"224","severity":1,"message":"225","line":114,"column":15,"nodeType":"226","messageId":"227","endLine":114,"endColumn":17},{"ruleId":"229","severity":1,"message":"246","line":138,"column":6,"nodeType":"231","endLine":138,"endColumn":12,"suggestions":"247"},{"ruleId":"211","severity":1,"message":"233","line":4,"column":5,"nodeType":"213","messageId":"214","endLine":4,"endColumn":13},{"ruleId":"211","severity":1,"message":"248","line":12,"column":9,"nodeType":"213","messageId":"214","endLine":12,"endColumn":16},{"ruleId":"211","severity":1,"message":"234","line":13,"column":10,"nodeType":"213","messageId":"214","endLine":13,"endColumn":19},{"ruleId":"211","severity":1,"message":"235","line":19,"column":13,"nodeType":"213","messageId":"214","endLine":19,"endColumn":21},{"ruleId":"229","severity":1,"message":"249","line":44,"column":6,"nodeType":"231","endLine":44,"endColumn":8,"suggestions":"250"},{"ruleId":"229","severity":1,"message":"238","line":79,"column":6,"nodeType":"231","endLine":79,"endColumn":23,"suggestions":"251"},{"ruleId":"211","severity":1,"message":"233","line":4,"column":5,"nodeType":"213","messageId":"214","endLine":4,"endColumn":13},{"ruleId":"211","severity":1,"message":"248","line":12,"column":9,"nodeType":"213","messageId":"214","endLine":12,"endColumn":16},{"ruleId":"211","severity":1,"message":"234","line":13,"column":10,"nodeType":"213","messageId":"214","endLine":13,"endColumn":19},{"ruleId":"211","severity":1,"message":"235","line":19,"column":13,"nodeType":"213","messageId":"214","endLine":19,"endColumn":21},{"ruleId":"229","severity":1,"message":"252","line":44,"column":6,"nodeType":"231","endLine":44,"endColumn":8,"suggestions":"253"},{"ruleId":"229","severity":1,"message":"238","line":81,"column":6,"nodeType":"231","endLine":81,"endColumn":23,"suggestions":"254"},{"ruleId":"211","severity":1,"message":"233","line":4,"column":5,"nodeType":"213","messageId":"214","endLine":4,"endColumn":13},{"ruleId":"211","severity":1,"message":"248","line":12,"column":9,"nodeType":"213","messageId":"214","endLine":12,"endColumn":16},{"ruleId":"211","severity":1,"message":"234","line":13,"column":10,"nodeType":"213","messageId":"214","endLine":13,"endColumn":19},{"ruleId":"211","severity":1,"message":"235","line":19,"column":13,"nodeType":"213","messageId":"214","endLine":19,"endColumn":21},{"ruleId":"229","severity":1,"message":"255","line":44,"column":6,"nodeType":"231","endLine":44,"endColumn":8,"suggestions":"256"},{"ruleId":"229","severity":1,"message":"238","line":80,"column":6,"nodeType":"231","endLine":80,"endColumn":23,"suggestions":"257"},{"ruleId":"211","severity":1,"message":"233","line":4,"column":5,"nodeType":"213","messageId":"214","endLine":4,"endColumn":13},{"ruleId":"211","severity":1,"message":"248","line":12,"column":9,"nodeType":"213","messageId":"214","endLine":12,"endColumn":16},{"ruleId":"211","severity":1,"message":"234","line":13,"column":10,"nodeType":"213","messageId":"214","endLine":13,"endColumn":19},{"ruleId":"211","severity":1,"message":"235","line":19,"column":13,"nodeType":"213","messageId":"214","endLine":19,"endColumn":21},{"ruleId":"229","severity":1,"message":"258","line":44,"column":6,"nodeType":"231","endLine":44,"endColumn":8,"suggestions":"259"},{"ruleId":"229","severity":1,"message":"238","line":81,"column":6,"nodeType":"231","endLine":81,"endColumn":23,"suggestions":"260"},{"ruleId":"211","severity":1,"message":"233","line":4,"column":5,"nodeType":"213","messageId":"214","endLine":4,"endColumn":13},{"ruleId":"211","severity":1,"message":"248","line":12,"column":9,"nodeType":"213","messageId":"214","endLine":12,"endColumn":16},{"ruleId":"211","severity":1,"message":"234","line":13,"column":10,"nodeType":"213","messageId":"214","endLine":13,"endColumn":19},{"ruleId":"211","severity":1,"message":"235","line":19,"column":13,"nodeType":"213","messageId":"214","endLine":19,"endColumn":21},{"ruleId":"229","severity":1,"message":"261","line":44,"column":6,"nodeType":"231","endLine":44,"endColumn":8,"suggestions":"262"},{"ruleId":"229","severity":1,"message":"238","line":82,"column":6,"nodeType":"231","endLine":82,"endColumn":23,"suggestions":"263"},{"ruleId":"211","severity":1,"message":"233","line":4,"column":5,"nodeType":"213","messageId":"214","endLine":4,"endColumn":13},{"ruleId":"211","severity":1,"message":"248","line":12,"column":9,"nodeType":"213","messageId":"214","endLine":12,"endColumn":16},{"ruleId":"211","severity":1,"message":"234","line":13,"column":10,"nodeType":"213","messageId":"214","endLine":13,"endColumn":19},{"ruleId":"211","severity":1,"message":"235","line":19,"column":13,"nodeType":"213","messageId":"214","endLine":19,"endColumn":21},{"ruleId":"229","severity":1,"message":"255","line":44,"column":6,"nodeType":"231","endLine":44,"endColumn":8,"suggestions":"264"},{"ruleId":"229","severity":1,"message":"238","line":80,"column":6,"nodeType":"231","endLine":80,"endColumn":23,"suggestions":"265"},{"ruleId":"211","severity":1,"message":"233","line":4,"column":5,"nodeType":"213","messageId":"214","endLine":4,"endColumn":13},{"ruleId":"211","severity":1,"message":"248","line":12,"column":9,"nodeType":"213","messageId":"214","endLine":12,"endColumn":16},{"ruleId":"211","severity":1,"message":"234","line":13,"column":10,"nodeType":"213","messageId":"214","endLine":13,"endColumn":19},{"ruleId":"211","severity":1,"message":"235","line":19,"column":13,"nodeType":"213","messageId":"214","endLine":19,"endColumn":21},{"ruleId":"229","severity":1,"message":"266","line":44,"column":6,"nodeType":"231","endLine":44,"endColumn":8,"suggestions":"267"},{"ruleId":"229","severity":1,"message":"238","line":80,"column":6,"nodeType":"231","endLine":80,"endColumn":23,"suggestions":"268"},{"ruleId":"211","severity":1,"message":"233","line":5,"column":5,"nodeType":"213","messageId":"214","endLine":5,"endColumn":13},{"ruleId":"211","severity":1,"message":"248","line":14,"column":9,"nodeType":"213","messageId":"214","endLine":14,"endColumn":16},{"ruleId":"211","severity":1,"message":"234","line":15,"column":10,"nodeType":"213","messageId":"214","endLine":15,"endColumn":19},{"ruleId":"211","severity":1,"message":"235","line":22,"column":13,"nodeType":"213","messageId":"214","endLine":22,"endColumn":21},{"ruleId":"229","severity":1,"message":"269","line":48,"column":8,"nodeType":"270","endLine":48,"endColumn":11},{"ruleId":"229","severity":1,"message":"271","line":51,"column":9,"nodeType":"270","endLine":51,"endColumn":12},{"ruleId":"229","severity":1,"message":"272","line":124,"column":6,"nodeType":"231","endLine":124,"endColumn":35,"suggestions":"273"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'BlogList' is defined but never used.","'useFetch' is defined but never used.","no-native-reassign",["274"],"no-negated-in-lhs",["275"],"'Navbar' is defined but never used.","'PRGraph' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'type' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.match.params.height', 'props.match.params.pid', 'props.match.params.token', 'props.match.params.type', 'props.match.params.vid', and 'props.match.params.width'. Either include them or remove the dependency array.","ArrayExpression",["276"],"'CanvasJS' is assigned a value but never used.","'errorText' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTempValueApi'. Either include it or remove the dependency array.",["277"],"React Hook useEffect has a missing dependency: 'graphData'. Either include it or remove the dependency array.",["278"],"'x' is defined but never used.","'y' is defined but never used.","React Hook useEffect has a missing dependency: 'getECGValueApi'. Either include it or remove the dependency array.",["279"],"'speed' is assigned a value but never used.","'scanBarWidth' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.h' and 'props.w'. Either include them or remove the dependency array.",["280"],"'user_id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQRSValueApi'. Either include it or remove the dependency array.",["281"],["282"],"React Hook useEffect has a missing dependency: 'getQTValueApi'. Either include it or remove the dependency array.",["283"],["284"],"React Hook useEffect has a missing dependency: 'getPRValueApi'. Either include it or remove the dependency array.",["285"],["286"],"React Hook useEffect has a missing dependency: 'getQTCValueApi'. Either include it or remove the dependency array.",["287"],["288"],"React Hook useEffect has a missing dependency: 'getPIValueApi'. Either include it or remove the dependency array.",["289"],["290"],["291"],["292"],"React Hook useEffect has a missing dependency: 'getHRValueApi'. Either include it or remove the dependency array.",["293"],["294"],"Assignments to the 'h' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Assignments to the 'w' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'dia_data', 'h', 'sys_data', and 'w'. Either include them or remove the dependency array.",["295"],"no-global-assign","no-unsafe-negation",{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"300","fix":"308"},{"desc":"309","fix":"310"},{"desc":"300","fix":"311"},{"desc":"312","fix":"313"},{"desc":"300","fix":"314"},{"desc":"315","fix":"316"},{"desc":"300","fix":"317"},{"desc":"318","fix":"319"},{"desc":"300","fix":"320"},{"desc":"312","fix":"321"},{"desc":"300","fix":"322"},{"desc":"323","fix":"324"},{"desc":"300","fix":"325"},{"desc":"326","fix":"327"},"Update the dependencies array to be: [props.match.params.height, props.match.params.pid, props.match.params.token, props.match.params.type, props.match.params.vid, props.match.params.width]",{"range":"328","text":"329"},"Update the dependencies array to be: [getTempValueApi]",{"range":"330","text":"331"},"Update the dependencies array to be: [data, graphData, visitDate]",{"range":"332","text":"333"},"Update the dependencies array to be: [getECGValueApi]",{"range":"334","text":"335"},"Update the dependencies array to be: [data, props.h, props.w]",{"range":"336","text":"337"},"Update the dependencies array to be: [getQRSValueApi]",{"range":"338","text":"339"},{"range":"340","text":"333"},"Update the dependencies array to be: [getQTValueApi]",{"range":"341","text":"342"},{"range":"343","text":"333"},"Update the dependencies array to be: [getPRValueApi]",{"range":"344","text":"345"},{"range":"346","text":"333"},"Update the dependencies array to be: [getQTCValueApi]",{"range":"347","text":"348"},{"range":"349","text":"333"},"Update the dependencies array to be: [getPIValueApi]",{"range":"350","text":"351"},{"range":"352","text":"333"},{"range":"353","text":"345"},{"range":"354","text":"333"},"Update the dependencies array to be: [getHRValueApi]",{"range":"355","text":"356"},{"range":"357","text":"333"},"Update the dependencies array to be: [sysData, diaData, visitDate, w, h, sys_data, dia_data]",{"range":"358","text":"359"},[2325,2327],"[props.match.params.height, props.match.params.pid, props.match.params.token, props.match.params.type, props.match.params.vid, props.match.params.width]",[1160,1162],"[getTempValueApi]",[1990,2007],"[data, graphData, visitDate]",[1365,1367],"[getECGValueApi]",[2988,2994],"[data, props.h, props.w]",[1312,1314],"[getQRSValueApi]",[2042,2059],[1308,1310],"[getQTValueApi]",[2127,2144],[1312,1314],"[getPRValueApi]",[2083,2100],[1312,1314],"[getQTCValueApi]",[2099,2116],[1308,1310],"[getPIValueApi]",[2095,2112],[1308,1310],[2079,2096],[1308,1310],"[getHRValueApi]",[2079,2096],[3126,3155],"[sysData, diaData, visitDate, w, h, sys_data, dia_data]"]